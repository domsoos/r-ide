{
	// Place your r-ide workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"def listener": {
		"prefix": "def listener",
		"body": [
		  "def listener():",
		  "    rospy.init_node('listener', anonymous=True)",
		  "    rospy.Subscriber(\"chatter\", String, callback)",
		  "    # spin() simply keeps python from exiting until this node is stopped",
		  "    rospy.spin()"
		],
		"description": "def listener"
	  }

	  "def talker": {
		"prefix": "def talker",
		"body": [
		  "def obs_gen():",
		  "    pub = rospy.Publisher('obs_gen_talker', String, queue_size=10)",
		  "    rospy.init_node('talker', anonymous=True)",
		  "    rate = rospy.Rate(0.5)",
		  "",
		  "    gen_rand_bool = lambda: 't' if random.choice([True,False]) else 'f'",
		  "    while not rospy.is_shutdown():",
		  "        obs = ','.join([gen_rand_bool() for _ in range(OBS_VARS)])",
		  "        obs = \"{} at {}\".format(obs, rospy.get_time())",
		  "        rospy.loginfo(obs)",
		  "        pub.publish(obs)",
		  "        rate.sleep()",
		  "",
		  "if __name__ == '__main__':",
		  "    try:",
		  "        obs_gen()",
		  "    except rospy.ROSInterruptException:",
		  "        pass"
		],
		"description": "def talker"
	  }
}