{
	"def listener": {
		"scope": "python",
		"prefix": "def listener",
		"body": [
		  "def listener():",
		  "    rospy.init_node('listener', anonymous=True)",
		  "    rospy.Subscriber(\"chatter\", String, callback)",
		  "    # spin() simply keeps python from exiting until this node is stopped",
		  "    rospy.spin()"
		],
		"description": "def listener",
		"isFileTemplate": true
	  },

	  "def talker": {
		"scope": "python",
		"prefix": "def talker",
		"body": [
		  "def obs_gen():",
		  "    pub = rospy.Publisher('obs_gen_talker', String, queue_size=10)",
		  "    rospy.init_node('talker', anonymous=True)",
		  "    rate = rospy.Rate(0.5)",
		  "",
		  "    gen_rand_bool = lambda: 't' if random.choice([True,False]) else 'f'",
		  "    while not rospy.is_shutdown():",
		  "        obs = ','.join([gen_rand_bool() for _ in range(OBS_VARS)])",
		  "        obs = \"{} at {}\".format(obs, rospy.get_time())",
		  "        rospy.loginfo(obs)",
		  "        pub.publish(obs)",
		  "        rate.sleep()",
		  "",
		  "if __name__ == '__main__':",
		  "    try:",
		  "        obs_gen()",
		  "    except rospy.ROSInterruptException:",
		  "        pass"
		],
		"description": "def talker",
		"isFileTemplate": true
	  },

	  "srv example": {
		"scope": "ros.msg",
		"prefix": "srv example",
		"body": [
		  "#request constants",
		  "$0 int8 FOO=1",
		  "int8 BAR=2",
		  "#request fields",
		  "int8 foobar",
		  "another_pkg/AnotherMessage msg",
		  "---",
		  "#response constants",
		  "uint32 SECRET=123456",
		  "#response fields",
		  "another_pkg/YetAnotherMessage val",
		  "CustomMessageDefinedInThisPackage value",
		  "uint32 an_integer",
		  "reference: http://wiki.ros.org/srv"
		],
		"description": "srv example",
		"isFileTemplate": true
	  },

	  "msg example": {
		"scope": "ros.msg",
		"prefix": "msg example",
		"body": [
		  "int32 X=123 $0",
		  "int32 Y=-123 $0",
		  "string FOO=foo",
		  "string EXAMPLE=\"#comments\" are ignored, and leading and trailing whitespace removed",
		  "reference: http://wiki.ros.org/msg"
		],
		"description": "msg example",
		"isFileTemplate": true
	  },

	  "urdf example": {
		"scope": "urdf",
		"prefix": "urdf example",
		"body": [
		  "<?xml version=\"1.0\"?>",
		  "   <robot name=\"myfirst\">",
		  "      <link name=\"base_link\">",
		  "        <visual>",
		  "          <geometry>",
		  "            <cylinder length=\"0.6\" radius=\"0.2\"/>",
		  "          </geometry>",
		  "        </visual>",
		  "      </link>",
		  "   </robot>"
		],
		"description": "urdf example",
		"isFileTemplate": true
	},
	"service node example": {
		"scope": "C++",
		"prefix": "service node example",
		"body": [
			"bool add(beginner_tutorials::AddTwoInts::Request  &req,",
			"             beginner_tutorials::AddTwoInts::Response &res)",
			"    {",
			"      res.sum = req.a + req.b;",
			"      ROS_INFO(\"request: x=%ld, y=%ld\", (long int)req.a, (long int)req.b);",
			"      ROS_INFO(\"sending back response: [%ld]\", (long int)res.sum);",
			"     return true;",
			"   }",
			"",
			"   int main(int argc, char **argv)",
			"   {",
			"     ros::init(argc, argv, \"$0 add_two_ints_server\");",
			"     ros::NodeHandle n;",
			"     ",
			"     ros::ServiceServer service = n.advertiseService(\"$0 add_two_ints\", add);",
			"     ROS_INFO(\"$0 Ready to add two ints.\");",
			"     ros::spin();",
			"     ",
			"     return 0;",
			"   }",
			"   /**",
			"   * Reference: http://wiki.ros.org/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29",
			"   */"
		],
		"description": "example service node"
	},
	"client node example": {
		"scope": "C++",
		"prefix": "client node example",
		"body": [
		  "int main(int argc, char **argv)",
		  "{",
		  "  ros::init(argc, argv, \"add_two_ints_client\");",
		  "  if (argc != 3)",
		  "  {",
		  "    ROS_INFO(\"usage: add_two_ints_client X Y\");",
		  "    return 1;",
		  "  }",
		  "",
		  "  ros::NodeHandle n;",
		  "  ros::ServiceClient client = n.serviceClient<beginner_tutorials::AddTwoInts>(\"$1\");",
		  "  beginner_tutorials::AddTwoInts srv;",
		  "  srv.request.a = atoll(argv[1]);",
		  "  srv.request.b = atoll(argv[2]);",
		  "  if (client.call(srv))",
		  "  {",
		  "    ROS_INFO(\"Sum: %ld\", (long int)srv.response.sum);",
		  "  }",
		  "  else",
		  "  {",
		  "    ROS_ERROR(\"Failed to call service $1\");",
		  "    return 1;",
		  "  }",
		  "",
		  "  return 0;",
		  "}",
		  "/**",
		  "* Reference: http://wiki.ros.org/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29",
		  "*/"
		],
		"description": "client node example"
	  }	  
	
}